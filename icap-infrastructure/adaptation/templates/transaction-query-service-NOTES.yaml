# 1. Get the application URL by running these commands:
# {{- if .Values.transactionqueryservice.ingress.enabled }}
# {{- range .Values.transactionqueryservice.ingress.hosts }}
#   http{{ if $.Values.transactionqueryservice.ingress.tls }}s{{ end }}://{{ . }}{{ $.Values.transactionqueryservice.ingress.path }}
# {{- end }}
# {{- else if contains "NodePort" .Values.transactionqueryservice.service.type }}
#   export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "transactionqueryservice.fullname" . }})
#   export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
#   echo http://$NODE_IP:$NODE_PORT
# {{- else if contains "LoadBalancer" .Values.transactionqueryservice.service.type }}
#      NOTE: It may take a few minutes for the LoadBalancer IP to be available.
#            You can watch the status of by running 'kubectl get svc -w {{ template "transactionqueryservice.fullname" . }}'
#   export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "transactionqueryservice.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
#   echo http://$SERVICE_IP:{{ .Values.transactionqueryservice.service.port }}
# {{- else if contains "ClusterIP" .Values.transactionqueryservice.service.type }}
#   export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "transactionqueryservice.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
#   echo "Visit http://127.0.0.1:8080 to use your application"
#   kubectl port-forward $POD_NAME 8080:80
# {{- end }}
